#=========================================================================
# Matlab Module Makefile Fragment
#=========================================================================
# This makefile fragment will automatically generate matlab plot PDF
# files by first running the corresponding matlab script and then making
# sure the fonts are embedded. To use this module you need matlab
# installed as well as ps2pdfwr for font embedding. A user should simply
# add \includegraphics{plot-foo.mat.pdf} and the build system will know
# that it should run the plot_foo.m script in the mat directory to
# create the corresponding PDF. The mat.m matlab function is always run
# before running the target matlab plot script, so this where you can
# subdirectories to your matlab path. Please read the documenation in
# 'albs-uguide.txt' for more details on how the Automatic LaTeX Build
# System works.

MATLAB   = @matlab@
PS2PDFWR = @ps2pdfwr@

mat_enabled     = @mat_enabled@
mat_figs        = $(filter %.mat.pdf, $(figs))
mat_prebuild    = $(mat_figs)
mat_dir         = $(top_dir)/mat
mat_cbxplot_dir = $(top_dir)/mat/cbxplot

# Include the matlab dependency files (.d) that each matlab script
# should generate.

mat_deps = $(patsubst %.mat.pdf, %.d, $(mat_figs))

-include $(mat_deps)

#-------------------------------------------------------------------------
# Matlab Fig Template
#-------------------------------------------------------------------------
# We have to use a template to define the rules which create the PDF
# figures since we need to convert the dashes in the PDF file name into
# underscores for the matlab script name. Notice that in addition to
# running the matlab script we also embedd the fonts in the PDF file.
#
# Arguments:
#  $(1) : PDF file name (with dashes and .mat.pdf suffix)
#

define matlab_fig_template
$(1) : $(subst -,_,$(patsubst %.mat.pdf,%.m,$(1)))
	env MATLABPATH="$$(mat_dir):$$$$MATLABPATH" \
    $(MATLAB) -nojvm -nosplash -nodisplay \
      -r "mat('$(mat_dir)'); $(subst -,_,$(patsubst %.mat.pdf,%,$(1)));exit"
	$(PS2PDFWR) -dPDFSETTINGS=/prepress $(1) $(1).tmp
	mv $(1).tmp $(1)
endef

# Iterate over the matlab figures and call the template for each one

ifeq ($(mat_enabled),yes)
$(foreach mat_fig,$(mat_figs), \
  $(eval $(call matlab_fig_template,$(mat_fig))))
endif

junk += $(mat_figs) $(mat_deps)

